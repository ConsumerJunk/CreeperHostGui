evaluationDependsOnChildren() // gotta make sure the children happen first

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'net.anshulverma.gradle:gradle-fileupload-plugin:1.0.4'
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'net.anshulverma.gradle.fileupload'

version = "1.8.7"

allprojects {
    group= "net.creeperhost.minetogether"
    archivesBaseName = "minetogether"

    sourceCompatibility = targetCompatibility = "1.6"
    compileJava {
        sourceCompatibility = targetCompatibility = "1.6"
        options.encoding = "UTF-8"
    }
}

compileJava {
    sourceCompatibility = targetCompatibility = "1.6"
    options.encoding = "UTF-8"
}

dependencies {
    compile group: 'com.google.code.gson', name: 'gson', version: '2.2.4'
    compile group: 'commons-io', name: 'commons-io', version: '2.4'
}

repositories {
    jcenter()
    maven { url = "http://files.minecraftforge.net/maven" }
    mavenCentral()
}

task setupDecompWorkspace
task setupDevWorkspace
task setupCiWorkspace

ext.jarFile = zipTree(jar.archivePath)

task apiJar(type: Jar) {
    appendix = "api"
    from(project.ext.jarFile) {
       includes.addAll(["net/creeperhost/creeperhost/api/**"])
    }
}

subprojects {
    version = minecraft.version  + "-" + rootProject.version
	
    dependencies {
        compile rootProject
    }
    sourceSets.main.resources.srcDirs += rootProject.sourceSets.main.resources.srcDirs

    jar {
        duplicatesStrategy = 'exclude'
        from rootProject.sourceSets.main.output
    }

    sourceJar {
        duplicatesStrategy = 'exclude'
        from rootProject.sourceSets.main.allSource
    }

    ext.jarFile = zipTree(jar.archivePath)
	
    task apiJar(type: Jar, dependsOn: reobfJar) {
        appendix = "api"

        from(project.ext.jarFile) {
            includes.addAll(["net/creeperhost/creeperhost/api/**"])
        }
    }
    
    artifacts {
        archives sourceJar //apiJar
    }
    
    processResources {
        inputs.property "version", project.version
        inputs.property "mcversion", project.minecraft.version

        from(sourceSets.main.resources.srcDirs) {
            include 'mcmod.info'
            expand 'version':project.version, 'mcversion':project.minecraft.version
        }

        from(sourceSets.main.resources.srcDirs) {
            exclude 'mcmod.info'
        }
    }
    
    // task deps
    rootProject.setupDecompWorkspace.dependsOn setupDecompWorkspace
    rootProject.setupDevWorkspace.dependsOn setupDevWorkspace
    rootProject.setupCiWorkspace.dependsOn setupCiWorkspace
    rootProject.build.dependsOn build
    rootProject.uploadArchives.dependsOn uploadArchives
    
    task transfer(type:Exec) {
        commandLine "/usr/bin/curl",  "--silent", "--upload-file", jar.outputs.files.getFiles()[0], "https://transfer.sh/" + jar.archiveName
    }
    
    transfer.doLast {
        println '\n'
    }
}
